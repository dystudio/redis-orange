#!/bin/bash

result=0;

<% if p('cluster_enabled').eql?('yes') %>
REDIS_HOME="/var/vcap/packages/redis";
REDIS_CLI="${REDIS_HOME}/bin/redis-cli";

REDIS_PORT="<%= p('port') %>";

REDIS_PASSWORD="";
<%
  master=link('redis_conn')
  if_link('master_conn'){ |x| master=x }
  master.if_p('password') do |password|
    unless password.to_s.empty? %>
REDIS_PASSWORD="-a <%= password %>";
<%  end
  end
%>

<%
  master=link('redis_conn')
  if_link('master_conn'){ |x| master=x }
  addresses=''
  master.instances.each{ |x| addresses.concat(x.address).concat(' ') }
  if !link('redis_conn').address.eql?(master.address)
    link('redis_conn').instances.each{ |x| addresses.concat(x.address).concat(' ') }
  end
%>
REDIS_ADDRESSES="<%= addresses %>";

<%
  master=link('redis_conn')
  if_link('master_conn'){ |x| master=x }
  instances=master.instances.length
  slave_instances=0
  if !link('redis_conn').address.eql?(master.address)
    slave_instances=link('redis_conn').instances.length
    instances+=slave_instances
  end
%>
REDIS_INSTANCES="<%= instances %>";

REDIS_SLAVE_INSTANCES="";
<%
  if slave_instances == 0
    if_p('cluster_replicas_node_count') { |x| slave_instances=x.to_i }
  end
  if slave_instances > 0 %>
REDIS_SLAVE_INSTANCES="--cluster-replicas <%= slave_instances %>";
<%
  end %>

REDIS_NODES="";
for i in ${REDIS_ADDRESSES};
do
  REDIS_NODES="${REDIS_NODES} ${i}:${REDIS_PORT}";
done

AVAILABLE_NODES=0;
for i in ${REDIS_ADDRESSES};
do
  PING="$(${REDIS_CLI} -h ${i} -p ${REDIS_PORT} ${REDIS_PASSWORD} PING)";
  if [[ -n "${PING}" ]] && [[ "${PING}" == "PONG" ]];
  then
    AVAILABLE_NODES=$((AVAILABLE_NODES+1));
  fi
done

if [[ ${REDIS_INSTANCES} -eq ${AVAILABLE_NODES} ]];
then
  ${REDIS_CLI} --cluster create ${REDIS_NODES} \
    ${REDIS_SLAVE_INSTANCES} \
    ${REDIS_PASSWORD} <<< "yes";
  result=${?};
fi

<% end %>

exit ${result};
