#!/bin/bash

result=0;

<% if p('cluster_enabled').eql?('yes') && spec.bootstrap %>
REDIS_HOME="/var/vcap/packages/redis";
REDIS_CLI="${REDIS_HOME}/bin/redis-cli";

REDIS_PORT="<%= p('port') %>";

REDIS_PASSWORD="";
<%
  if_p('password') do |password|
    unless password.to_s.empty? %>
REDIS_PASSWORD="-a <%= password %>";
<%  end
  end
%>

<%
addresses=''
link('redis_conn').instances.each{ |node| addresses.concat(node.address).concat(' ') }
%>
REDIS_ADDRESSES="<%= addresses %>";

REDIS_INSTANCES="<%= link('redis_conn').instances.length %>";

REDIS_SLAVE_INSTANCES="";
<%
  if_p('cluster_replicas_node_count') do |instances|
    if instances.to_i > 0 %>
REDIS_SLAVE_INSTANCES="--cluster-replicas <%= instances %>";
<%
    end
  end %>

n=0;
while [[ ${REDIS_INSTANCES} -gt ${n} ]];
do
  n=0;
  for i in ${REDIS_ADDRESSES};
  do
    if [[ "$(${REDIS_CLI} -h ${i} -p ${REDIS_PORT} ${REDIS_PASSWORD} PING)" -eq "PONG" ]];
    then
      n=$((n+1));
    fi
  done
done

REDIS_NODES="";
for i in ${REDIS_ADDRESSES};
do
  REDIS_NODES="${REDIS_NODES} ${i}:${REDIS_PORT}";
done

${REDIS_CLI} --cluster create ${REDIS_NODES} \
  ${REDIS_SLAVE_INSTANCES} \
  ${REDIS_PASSWORD} <<< "yes";
result=${?};

<% end %>

exit ${result};
