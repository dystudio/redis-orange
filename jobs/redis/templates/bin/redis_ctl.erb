#!/bin/bash

REDIS_HOME="/var/vcap/packages/redis";
REDIS_SERVER="${REDIS_HOME}/bin/redis-server";
REDIS_CLI="${REDIS_HOME}/bin/redis-cli";
REDIS_RUN_DIR="<%= p('run_dir') %>";
REDIS_LOG_DIR="<%= p('log_dir') %>";
REDIS_LOG_FILE="${REDIS_LOG_DIR}/<%= p('logfile') %>";
REDIS_STORE_DIR="<%= p('dir') %>";
REDIS_PID_FILE="${REDIS_RUN_DIR}/<%= p('pidfile') %>";
REDIS_CONF="/var/vcap/jobs/redis/config/redis.conf";
<% if p('bind') %>
REDIS_IP="<%= spec.ip %>";
<% else %>
REDIS_IP="127.0.0.1";
<% end %>
REDIS_PORT="<%= p('port') %>";

<%
  if_p('password') do |password|
    unless password.to_s.empty? %>
REDIS_PASSWORD="<%= password %>";
<%  end
  end
%>

REDIS_SHUTDOWN="SHUTDOWN";
<% if_p('rename_shutdown_command') do |command| %>
REDIS_SHUTDOWN="<%= command %>";
<% end %>

case "${1}" in
  start)
    mkdir -p \
      "${REDIS_RUN_DIR}" \
      "${REDIS_LOG_DIR}" \
      "${REDIS_STORE_DIR}";

    chown vcap:vcap \
      "${REDIS_RUN_DIR}" \
      "${REDIS_LOG_DIR}" \
      "${REDIS_STORE_DIR}";

    chmod 750 "${REDIS_STORE_DIR}";
    touch "${REDIS_LOG_FILE}";
    chown vcap:vcap "${REDIS_LOG_FILE}";

    # Remove temp backup files that might be left over because of a
    # previously aborted BGSAVE, just to save space
    rm -f "${REDIS_STORE_DIR}"/temp-*.rdb

    ulimit -n 10032

    if [[ -f /sys/kernel/mm/transparent_hugepage/enabled ]];
    then
      # fail silently as bosh-lite is a read-only file system
      set +e;
      echo never > /sys/kernel/mm/transparent_hugepage/enabled;
      set -e;
    fi

    sysctl -w net.core.somaxconn=511;

    # Recommended for running redis on a VM in production
    # (https://www.pivotaltracker.com/story/show/74949514)
    sysctl vm.overcommit_memory=1;

    if [[ -f "${REDIS_PID_FILE}" ]];
    then
      echo "${REDIS_PID_FILE} exists, process is already running or crashed";
    else
      echo "Starting Redis server...";
      exec chpst -u vcap:vcap "${REDIS_SERVER}" "${REDIS_CONF}" \
        >> "${REDIS_LOG_FILE}" 2>&1;
    fi
    ;;
  stop)
    if [[ -f "${REDIS_PID_FILE}" ]];
    then
      redis_pid="$(cat ${REDIS_PID_FILE})";
      echo "Stopping ...";
      redis_password_opt="${REDIS_PASSWORD:+"-a ${REDIS_PASSWORD}"}";
      exec chpst -u vcap:vcap \
        "${REDIS_CLI}" \
          -h "${REDIS_IP}" \
          -p "${REDIS_PORT}" \
          ${redis_password_opt} \
          ${REDIS_SHUTDOWN};
      while [[ -x "/proc/${redis_pid}" ]];
      do
        echo "Waiting for Redis to shutdown ...";
        sleep 1;
      done
      rm -f "${REDIS_PID_FILE}"
      echo "Redis stopped";
    else
      echo "${REDIS_PID_FILE} does not exist, process is not running";
    fi
    ;;
  *)
    echo "Usage: ${0} {start|stop}";
  ;;
esac
