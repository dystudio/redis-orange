---
name: redis

description: This package run a simple Redis server.

templates:
  redis.conf.erb: config/redis.conf
  redis.erb: bin/redis

packages:
- redis

properties:
################################## NETWORK #####################################
  redis.port:
    default: 6379
    description: Accept connections on the specified port, default is 6379 (IANA #815344). If port 0 is specified Redis will not listen on a TCP socket.
  redis.timeout:
    default: 0
    description: Close the connection after a client is idle for N seconds (0 to disable)
  redis.tcp_keepalive:
    default: 300
    description: TCP keepalive. If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence of communication. A reasonable value for this option is 300 seconds, which is the new Redis default starting with Redis 3.2.1.
################################# GENERAL #####################################
  redis.run_dir:
    default: /var/vcap/sys/run/redis
    description: Directory where to store Redis pid file
  redis.pidfile:
    default: redis.pid
    description: If a pid file is specified, Redis writes it where specified at startup and removes it at exit. Creating a pid file is best effort: if Redis is not able to create it nothing bad happens, the server will start and run normally.
  redis.loglevel:
    default: notice
    description: Specify the server verbosity level. This can be one of: debug (a lot of information, useful for development/testing), verbose (many rarely useful info, but not a mess like the debug level), notice (moderately verbose, what you want in production probably), warning (only very important / critical messages are logged).
  redis.log_dir:
    default: /var/vcap/sys/log/redis
    description: Directory where to store Redis log file
  redis.logfile:
    default: redis.log
    description: Specify the log file name. Also the empty string can be used to force Redis to log on the standard output. Note that if you use standard output for logging but daemonize, logs will be sent to /dev/null.
  redis.syslog_enabled:
    default: yes
    description: To enable logging to the system logger, just set 'syslog-enabled' to yes, and optionally update the other syslog parameters to suit your needs.
  redis.syslog_ident:
    description: Specify the syslog identity.
    default: redis-server
  redis.syslog_facility:
    default: local0
    description: Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.
  redis.databases:
    default: 16
    description: Set the number of databases. The default database is DB 0, you can select a different one on a per-connection basis using SELECT <dbid> where dbid is a number between 0 and 'databases'-1
################################ SNAPSHOTTING  ################################
  redis.save:
    default:
      - 900 1
      - 300 10
      - 60 10000
    description: Save the DB on disk: save <seconds> <changes> Will save the DB if both the given number of seconds and the given number of write operations against the DB occurred.
  redis.stop_writes_on_bgsave_error:
    default: yes
    description: By default Redis will stop accepting writes if RDB snapshots are enabled (at least one save point) and the latest background save failed. This will make the user aware (in a hard way) that data is not persisting on disk properly, otherwise chances are that no one will notice and some disaster will happen. However if you have setup your proper monitoring of the Redis server and persistence, you may want to disable this feature so that Redis will continue to work as usual even if there are problems with disk, permissions, and so forth.
  redis.rdbcompression:
    default: yes
    description: Compress string objects using LZF when dump .rdb databases.
  redis.rdbchecksum:
    default: yes
    description: Since version 5 of RDB a CRC64 checksum is placed at the end of the file. This makes the format more resistant to corruption but there is a performance hit to pay (around 10%) when saving and loading RDB files, so you can disable it for maximum performances.
  redis.dir:
    default: /var/vcap/store/redis
    description: The working directory. The DB will be written inside this directory. The Append Only File will also be created inside this directory.
################################# REPLICATION #################################
  redis.replication:
    description: When set to false, master/slave replication will be disabled and all instances will run as standalone deployments.
    default: true
  redis.replica_serve_stale_data:
    default: yes
    description: When a replica loses its connection with the master, or when the replication is still in progress, the replica can act in two different ways: 1) if replica-serve-stale-data is set to 'yes' (the default) the replica will still reply to client requests, possibly with out of date data, or the data set may just be empty if this is the first synchronization. 2) if replica-serve-stale-data is set to 'no' the replica will reply with an error "SYNC with master in progress" to all the kind of commands but to INFO, replicaOF, AUTH, PING, SHUTDOWN, REPLCONF, ROLE, CONFIG, SUBSCRIBE, UNSUBSCRIBE, PSUBSCRIBE, PUNSUBSCRIBE, PUBLISH, PUBSUB, COMMAND, POST, HOST: and LATENCY.
  redis.replica_read_only:
    default: yes
    description: You can configure a replica instance to accept writes or not. Writing against a replica instance may be useful to store some ephemeral data (because data written on a replica will be easily deleted after resync with the master) but may also cause problems if clients are writing to it because of a misconfiguration. Since Redis 2.6 by default replicas are read-only.
  redis.repl_ping_replica_period:
    default: 10
    description: Replicas send PINGs to server in a predefined interval. It's possible to change this interval with the repl_ping_replica_period option. The default value is 10 seconds.
  redis.repl_timeout:
    default: 60
    description: Sets the replication timeout for: 1) Bulk transfer I/O during SYNC, from the point of view of replica. 2) Master timeout from the point of view of replicas (data, pings). 3) Replica timeout from the point of view of masters (REPLCONF ACK pings). It is important to make sure that this value is greater than the value specified for repl-ping-replica-period otherwise a timeout will be detected every time there is low traffic between the master and the replica.
  redis.repl_disable_tcp_nodelay:
    default: no
    description: Disable TCP_NODELAY on the replica socket after SYNC? If you select "yes" Redis will use a smaller number of TCP packets and less bandwidth to send data to replicas. But this can add a delay for the data to appear on the replica side, up to 40 milliseconds with Linux kernels using a default configuration. If you select "no" the delay for data to appear on the replica side will be reduced but more bandwidth will be used for replication. By default we optimize for low latency, but in very high traffic conditions or when the master and replicas are many hops away, turning this to "yes" may be a good idea.
  redis.replica_priority:
    default: 100
    description: The replica priority is an integer number published by Redis in the INFO output. It is used by Redis Sentinel in order to select a replica to promote into a master if the master is no longer working correctly. A replica with a low priority number is considered better for promotion, so for instance if there are three replicas with priority 10, 100, 25 Sentinel will pick the one with priority 10, that is the lowest. However a special priority of 0 marks the replica as not able to perform the role of master, so a replica with priority of 0 will never be selected by Redis Sentinel for promotion.
################################## SECURITY ###################################
  redis.password:
    description: Require clients to issue AUTH <PASSWORD> before processing any other commands.  This might be useful in environments in which you do not trust others with access to the host running redis-server. This should stay commented out for backward compatibility and because most people do not need auth (e.g. they run their own servers). Warning: since Redis is pretty fast an outside user can try up to 150k passwords per second against a good box. This means that you should use a very strong password otherwise it will be very easy to break.
################################### CLIENTS ####################################
